using Content.Client.UserInterface.Controls;
using Content.Shared.Cargo;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Content.Shared._NF.Bank; // Frontier
using Content.Shared._NF.Cargo.BUI; // Lua

namespace Content.Client.Cargo.UI;

[GenerateTypedNameReferences]
public sealed partial class CargoPalletMenu : FancyWindow
{
    public Action? SellRequested;
    public Action? AppraiseRequested;

    public CargoPalletMenu()
    {
        RobustXamlLoader.Load(this);
        SellButton.OnPressed += OnSellPressed;
        AppraiseButton.OnPressed += OnAppraisePressed;
    }

    public void SetAppraisal(int amount)
    {
        AppraisalLabel.Text = BankSystemExtensions.ToSpesoString(amount); // Frontier: custom speso formatting
    }

    // Lua start
    public void SetReal(int amount)
    {
        RealLabel.Text = BankSystemExtensions.ToSpesoString(amount);
    }
    public void SetCount(int count)
    {
        CountLabel.Text = count.ToString();
    }
    public void SetEnabled(bool enabled)
    {
        AppraiseButton.Disabled = !enabled;
        SellButton.Disabled = !enabled;
    }

    public void SetTaxEntries(List<PalletTaxEntry> entries)
    {
        if (TaxList == null) return;
        TaxList.DisposeAllChildren();
        foreach (var e in entries)
        {
            var row = new BoxContainer { Orientation = BoxContainer.LayoutOrientation.Horizontal };
            row.AddChild(new Label { Text = e.Name, HorizontalExpand = true });
            var perc = e.Percent >= 0 ? $"+{e.Percent}%" : $"{e.Percent}%";
            row.AddChild(new Label { Text = perc });
            TaxList.AddChild(row);
        }
    }
    // Lua end

    private void OnSellPressed(BaseButton.ButtonEventArgs obj)
    {
        SellRequested?.Invoke();
    }

    private void OnAppraisePressed(BaseButton.ButtonEventArgs obj)
    {
        AppraiseRequested?.Invoke();
    }
}
